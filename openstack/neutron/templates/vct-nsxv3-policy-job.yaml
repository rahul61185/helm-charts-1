{{- if or (.Values.isImageTransportTemplating | default false) (and (contains ",nsxv3" .Values.ml2_mechanismdrivers) (.Capabilities.APIVersions.Has "vcenter-operator.stable.sap.cc/v1")) }}
{{- if .Values.policy_migration_image }}
apiVersion: vcenter-operator.stable.sap.cc/v1
kind: VCenterTemplate
metadata:
  name: 'neutron-nsxv3-policy-job'
options:
  scope: 'cluster'
  jinja2_options:
    variable_start_string: '{='
    variable_end_string: '=}'
template: |
  {% if nsx_t_enabled is defined and nsx_t_enabled -%}
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: neutron-nsxv3-policy-migration-{= name =}
    labels:
      system: openstack
      type: backend
      component: neutron
      vcenter: {= vcenter_name =}
      datacenter: {= availability_zone =}
      vccluster: {= cluster_name =}
  spec:
    selector:
      matchLabels:
          name: neutron-nsxv3-policy-migration-{= name =}
    template:
      metadata:
        labels:
{{ tuple . "neutron" "nsxv3" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 10 }}
          name: neutron-nsxv3-policy-migration-{= name =}
          vcenter: {= vcenter_name =}
          datacenter: {= availability_zone =}
          vccluster: {= cluster_name =}
        annotations:
          configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
      spec:
        containers:
        - name: neutron-nsxv3-migration-job
          image: {{.Values.global.registry}}/loci-neutron:{{.Values.policy_migration_image}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init"]
          args: ["bash", "-c", "neutron-nsxv3-agent-cli-sync --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2-conf.ini --config-file /etc/neutron/plugins/ml2/ml2-nsxv3.ini --config-file /etc/neutron/plugins/ml2/ml2-nsx-policy-migration.ini && touch /tmp/done && sleep infinity"]
          env:
          - name: PYTHONWARNINGS
            value: "ignore:Unverified HTTPS request"
          - name: PGAPPNAME
            value: neutron-nsxv3-agent-{= name =}
          - name: REQUESTS_CA_BUNDLE
            value: ""
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/done
            initialDelaySeconds: 20
            periodSeconds: 10
          volumeMounts:
          - name: etc-neutron
            mountPath: /etc/neutron
            readOnly: true
        volumes:
        - name: etc-neutron
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: neutron-etc
                items:
                - key: neutron.conf
                  path: neutron.conf
                - key: api-paste.ini
                  path: api-paste.ini
                - key: neutron-policy.json
                  path: policy.json
                - key: logging.conf
                  path: logging.conf
                - key: ml2-conf.ini
                  path: plugins/ml2/ml2-conf.ini
                - key: ml2-nsx-policy-migration.ini
                  path: plugins/ml2/ml2-nsx-policy-migration.ini
            - configMap:
                name: neutron-ml2-nsxv3-{= name =}
                items:
                - key: ml2-nsxv3.ini
                  path: plugins/ml2/ml2-nsxv3.ini
  {% endif %}
{{- end }}
{{- end }}
